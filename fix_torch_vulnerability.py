#!/usr/bin/env python3
"""
PyTorch 보안 취약점 해결 스크립트
safetensors 사용으로 CVE-2025-32434 해결
"""

import os
import sys
import warnings

def fix_torch_vulnerability():
    """PyTorch 보안 취약점을 해결하기 위한 환경 설정"""
    
    # safetensors 강제 사용 환경 변수 설정
    os.environ['SAFETENSORS_FAST_GPU'] = '1'
    os.environ['TRANSFORMERS_USE_SAFETENSORS'] = '1'
    os.environ['TORCH_WEIGHTS_ONLY'] = '1'
    os.environ['TRANSFORMERS_SAFE_SERIALIZATION'] = '1'
    os.environ['HF_HUB_ENABLE_HF_TRANSFER'] = '1'
    
    # 경고 억제
    os.environ['TORCH_WARN_ON_LOAD'] = '0'
    os.environ['TORCH_LOAD_WARN_ONLY'] = '0'
    os.environ['PYTORCH_DISABLE_WARNINGS'] = '1'
    
    # PyTorch 버전 확인
    try:
        import torch
        print(f"PyTorch version: {torch.__version__}")
        
        # 버전이 낮은 경우 경고
        if torch.__version__ < '2.6.0':
            print("Warning: PyTorch version is below 2.6.0")
            print("Using safetensors to avoid security vulnerability")
            
            # 강력한 경고 억제
            warnings.filterwarnings("ignore", category=UserWarning)
            warnings.filterwarnings("ignore", message=".*vulnerability.*")
            warnings.filterwarnings("ignore", message=".*CVE-2025-32434.*")
            
    except ImportError:
        print("PyTorch not installed")
        return False
    
    return True

def apply_safety_settings():
    """안전한 설정 적용"""
    
    # FAISS 관련 안전 설정
    os.environ['FAISS_NO_C_API'] = '1'
    
    # HuggingFace 관련 설정
    os.environ['HF_HUB_DISABLE_TELEMETRY'] = '1'
    os.environ['TOKENIZERS_PARALLELISM'] = 'false'
    
    # 추가 안전 설정
    os.environ['PYTORCH_DISABLE_WARNINGS'] = '1'
    os.environ['TORCH_SHOW_CPP_STACKTRACES'] = '0'
    
    print("Safety settings applied")

if __name__ == "__main__":
    print("Applying PyTorch vulnerability fixes...")
    fix_torch_vulnerability()
    apply_safety_settings()
    print("Done!") 